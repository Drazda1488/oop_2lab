#include <iostream>
#include <string>

// Объявляем, что будем использовать пространство имен std (стандартное)
using namespace std;

// Объявляем класс, который называется Country (Страна)
class Country {

    // private: означает, что эти переменные можно использовать только внутри класса
private:
    string capital;     // Столица страны
    int population;     // Количество жителей в стране
    double area;          // Площадь страны

    // public: означает, что эти функции (методы) можно использовать снаружи класса
public:
    // Конструктор (специальная функция, которая вызывается при создании объекта)
    // Этот конструктор - без параметров (параметры - это то, что передается в скобках)
    Country() {
        capital = "";         // Инициализируем столицу пустой строкой
        population = 0;      // Инициализируем население нулем
        area = 0.0;            // Инициализируем площадь нулем
        cout << "Создана страна (без параметров)!" << endl;  // Сообщаем, что конструктор сработал
    }

    // Конструктор с параметрами (какие-то значения передаются при создании страны)
    Country(string cap, int pop, double ar) {
        capital = cap;      // Столица равна тому, что передали в cap
        population = pop;   // Население равно тому, что передали в pop
        area = ar;            // Площадь равна тому, что передали в ar
        cout << "Создана страна (с параметрами)!" << endl;   // Сообщаем, что конструктор сработал
    }

    // Конструктор копирования (создаем новую страну, копируя данные из другой страны)
    Country(const Country& other) {
        capital = other.capital;       // Столица новой страны = столице другой страны
        population = other.population; // Население новой страны = населению другой страны
        area = other.area;             // Площадь новой страны = площади другой страны
        cout << "Создана копия страны!" << endl;   // Сообщаем, что конструктор сработал
    }

    // Деструктор (специальная функция, которая вызывается, когда объект удаляется)
    ~Country() {
        cout << "Страна уничтожена!" << endl;   // Сообщаем, что деструктор сработал
    }

    // Функции для получения значений (геттеры) - позволяют узнать значения переменных
    string getCapital() const {
        return capital;  // Возвращаем значение столицы
    }

    int getPopulation() const {
        return population;   // Возвращаем значение населения
    }

    double getArea() const {
        return area;       // Возвращаем значение площади
    }

    // Функции для установки значений (сеттеры) - позволяют изменить значения переменных
    void setCapital(string newCapital) {
        capital = newCapital;  // Устанавливаем столицу в новое значение
    }

    void setPopulation(int newPopulation) {
        population = newPopulation;   // Устанавливаем население в новое значение
    }

    void setArea(double newArea) {
        area = newArea;        // Устанавливаем площадь в новое значение
    }

    // Функция для вывода информации о стране на экран
    void printInfo() const {
        cout << "Столица: " << capital << endl;         // Выводим столицу
        cout << "Население: " << population << endl;      // Выводим население
        cout << "Площадь: " << area << endl;          // Выводим площадь
    }
};

// Главная функция программы (с нее начинается выполнение)
int main() {
    setlocale(LC_ALL, "ru");
    // Создаем объект Country (страну) с помощью конструктора без параметров
    Country country1;
    cout << "Информация о стране 1 (без параметров):" << endl;
    country1.printInfo();  // Выводим информацию о стране

    // Создаем объект Country (страну) с помощью конструктора с параметрами
    Country country2("Moscow", 144000000, 17100000.0);
    cout << "\nИнформация о стране 2 (с параметрами):" << endl;
    country2.printInfo();  // Выводим информацию о стране

    // Создаем объект Country (страну) с помощью конструктора копирования
    Country country3 = country2;  // Копируем данные из country2 в country3
    cout << "\nИнформация о стране 3 (копия страны 2):" << endl;
    country3.printInfo();  // Выводим информацию о стране

    // Изменяем значения переменных в объекте country1 с помощью сеттеров
    country1.setCapital("Washington");
    country1.setPopulation(330000000);
    country1.setArea(9800000);
    cout << "\nИнформация о стране 1 (после изменений):" << endl;
    country1.printInfo();  // Выводим информацию о стране

    // Возвращаем 0, чтобы сообщить, что программа завершилась успешно
    return 0;
}
